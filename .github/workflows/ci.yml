name: Build and Test

on:
  push:
    branches: [master]
  pull_request:


jobs:

  setvars:
    runs-on: ubuntu-latest
    outputs:
      push: ${{ steps.vars.outputs.push }}
      tag: ${{ steps.vars.outputs.tag }}
      frontend: ${{ steps.vars.outputs.frontend }}
      backend: ${{ steps.vars.outputs.backend }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Set release vars
        id: vars
        run: |
          if [[ "${{ github.ref }}" == 'refs/tags/'* ]]; then
            echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "push=true" >> $GITHUB_OUTPUT
          else
            echo "tag=dev" >> $GITHUB_OUTPUT
            echo "push=false" >> $GITHUB_OUTPUT
          fi
          
          TRIGGER_DIRS=(
          ".github"
          "frontend"
          "backend"
          )
          for i in "${TRIGGER_DIRS[@]}"; do
            count=$(git diff --name-only $(git describe --tags --abbrev=0) HEAD -- ${i} | cut -d/ -f1 | grep -v ' ' | sort | uniq | wc -l)
            # Ensure that the count is a proper integer
            if [[ -z "$count" ]]; then count=0; fi
            if [[ "${i:0:1}" == "."  ]]; then i=${i:1}; fi
            echo "${i}Components=${count}" >> $GITHUB_OUTPUT
          done;

  test:
    needs: setvars
    runs-on: ubuntu-latest
    if: ${{ needs.setvars.outputs.backendComponents != 0 || inputs.githubComponents != 0 || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - name: Generate swagger docs
        run: make swagger
        working-directory: backend
      - name: Run backend tests
        run: make test
        working-directory: backend

  build-backend:
    runs-on: ubuntu-latest
    needs: [setvars, test]
    if: ${{ needs.setvars.outputs.backendComponents != 0 || inputs.githubComponents != 0 || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - name: Generate swagger docs
        run: make swagger
        working-directory: backend
      - name: Build backend
        run: make build
        working-directory: backend

  build-frontend:
    runs-on: ubuntu-latest
    needs: [setvars, test]
    if: ${{ needs.setvars.outputs.frontendComponents != 0 || inputs.githubComponents != 0 || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: Install Node types
        run: npm install --no-save @types/node
        working-directory: frontend
      - name: Build frontend
        run: npm run build
        working-directory: frontend
